package com.company;
// STATIC KEYWORD_(static blocks) WHEN STATIC-BLOCK AND main METHOD ARE IN THE SAME CLASS !!!
public class Ollie3 {

// THIS IS A STATIC BLOCK
    static
    {
        System.out.println("LET'S SEE WHETHER THE STATIC BLOCK GETS EXECUTED OR NOT !!!");
    }

// THIS IS ALSO A STATIC BLOCK
    static
    {
        System.out.println("I AM A STATIC BLOCK !!! I AM EXECUTED AT THE TIME OF LOADING OF THE CLASS !!!");
    }

// THIS IS ALSO A STATIC BLOCK
    static
    {
        System.out.println("YEP !!! THE STATIC BLOCK GOT EXECUTED !!!");
    }

    /*

      A STATIC BLOCK IS EXECUTED ONLY ONCE AT THE FIRST REFERENCE OF THE CLASS CONTAINING THE STATIC-BLOCK ,
      WHEN THE CLASS IS BEING LOADED , BEFORE THE CREATION OF AN OBJECT. FIRST , A CLASS IS LOADED IN THE MEMORY
      AND THEN THE OBJECTS (IF ANY) OF THE CLASS ARE CREATED.

    */

    public static void main(String[] args)
    {
        // NOTE: THE STATIC-BLOCK GETS EXECUTED EVEN WHEN THERE IS NO CODE INSIDE THE main METHOD WHEN THE main METHOD
        // AND THE STATIC-BLOCK ARE IN THE SAME CLASS.
        // THE STATIC-BLOCK IS ALWAYS THE FIRST TO BE EXECUTED WHENEVER THERE IS A REFERENCE OF THE CLASS
        // CONTAINING THE STATIC-BLOCK(IN THIS PROGRAM IT IS Ollie3) ANYWHERE FOR THE FIRST TIME.

        // IN THE ABOVE PROGRAM , SINCE THE main METHOD IS WHERE THE EXECUTION OF A PROGRAM BEGINS IN JAVA
        // (AND ALSO IN C++/C) , AND THE main METHOD AND THE STATIC-BLOCK ARE PRESENT IN THE SAME CLASS Ollie3 ,
        // THE EXECUTION OF THE main METHOD PROVIDES A REFERENCE TO THE CLASS Ollie3 AND HENCE THE STATIC-BLOCK
        // GETS EXECUTED.
    }
}
